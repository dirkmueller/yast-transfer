/****************************************************************************

Copyright (c) 2000 - 2012 Novell, Inc.
All Rights Reserved.

This program is free software; you can redistribute it and/or
modify it under the terms of version 2 of the GNU General Public License as
published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, contact Novell, Inc.

To contact Novell about this file by physical or electronic mail,
you may find current contact information at www.novell.com

****************************************************************************/
/**
 * File:    modules/FTP.ycp
 * Package: Transfer Protocols
 * Summary: Handle FTP Requests
 * Authors: Anas Nashif <nashif@suse.de>
 * Flags:   Stable
 *
 * $Id$
 */

{

module "FTP";

global string user = "";
global string password = "";

/**
 * Send a get request
 * @param url url in any standard form
 * @param output file to save result to
 * @return map Reponse map with HTTP code and transfer size and time
 */
global define map Get(string url, string output) ``{
    y2debug("URL: %1", url);
    map response = (map) SCR::Execute(.curl.get, url, $["output":output]);
    return response;
}

/**
 * List FTP directory
 */
global define list Dir(string url) ``{

    map dir = (map) SCR::Execute(.curl.ftp.dir, url, $[]);
    y2debug("returned string: %1", dir);

    if(size(dir) <= 0) {
	y2error("Error while trying to list directory");
	return [];
    }

    return filter(string s, toset(splitstring(dir["output"]:"", "\r\n")), ``(s!="." && s!=".." && s!=""));
}


/* EOF */
}
